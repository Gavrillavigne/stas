Хабр:
https://medium.com/nuances-of-programming/%D1%87%D0%B8%D1%81%D1%82%D0%B0%D1%8F-%D0%B0%D1%80%D1%85%D0%B8%D1%82%D0%B5%D0%BA%D1%82%D1%83%D1%80%D0%B0-%D1%80%D1%83%D0%BA%D0%BE%D0%B2%D0%BE%D0%B4%D1%81%D1%82%D0%B2%D0%BE-%D0%B4%D0%BB%D1%8F-%D0%BD%D0%B0%D1%87%D0%B8%D0%BD%D0%B0%D1%8E%D1%89%D0%B8%D1%85-355e10a0ce04

Сущности:
Пользователь (П)
Файл (Ф)
Директория (Д)
========================================================================================================================
Сценарии:
ФАЙЛ:
1) Пользователь ЗАГРУЖАЕТ файл
    1.1) UI                 - П вводит данные для загрузки (выбирает файл, устанавливает опции)
    1.2) Controller (MVC)   - Передает ввод в вариант использования (use case) и представляет ответ в понятном пользователю формате
    1.3) Use case           - Контролирует, какой контроллер будет вызван

    ???
    1.4) Определение Контроллера и Экшена для обработки запроса
    1.5) Предоставление ответа пользователю (успех, ошибка)

------------------------------------------------------------------------------------------------------------------------
2) Пользователь ОТКРЫВАЕТ файл


3) Пользователь СКАЧИВАЕТ файл
4) Пользователь УДАЛЯЕТ файл
5) Пользователь ДЕЛИТСЯ файлом

ДИРЕКТОРИЯ:
6) Пользователь СОЗДАЕТ директорию
7) Пользователь УДАЛЯЕТ директорию
8) Пользователь ДЕЛИТСЯ директорией

Пример:
Перевод заданного пользователем предложения с помощью специального API:
1) UI                   - П вводит предложение
2) Presenter (MVP)      - Передает ввод в вариант использования (use case) и представляет ответ в понятном пользователю формате
3) Перевод (Use case)   - Контролирует, какой контроллер / шлюз будет вызван
4) Перевод (Controller) - Анализирует запрос, удобный для HTTP-клиента, и ответ - удобный для приложения
5) Web                  - Получает данные из API, используя HTTP-клиент